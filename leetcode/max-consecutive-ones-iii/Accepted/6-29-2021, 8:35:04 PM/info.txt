{"id":514999703,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1624988104,"status_display":"Accepted","runtime":"56 ms","url":"/submissions/detail/514999703/","is_pending":"Not Pending","title":"Max Consecutive Ones III","memory":"55.4 MB","code":"class Solution {\npublic:\n    int longestOnes(vector<int>& nums, int k) {\n        int sz = nums.size();\n        int count = accumulate(nums.begin(), nums.end(), 0);\n        int currentSum = 0;\n        int maxSum = 0;\n        int currentZeroBalance = 0;\n        int iter = 0;\n        if(count + k > sz) return sz;\n        \n        for(int i = 0; i < nums.size(); ++i) {\n            if(nums[i] == 0) {\n                if(currentZeroBalance == k) {\n                    while(currentZeroBalance == k) {\n                        currentZeroBalance -= nums[iter] == 0;\n                        currentSum -= nums[iter] == 1;\n                        ++iter;\n                    }\n                }\n                ++currentZeroBalance;\n            } else {\n                ++currentSum;\n                maxSum = max(currentSum, maxSum);\n            }\n        }\n        \n        return maxSum + k;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"max-consecutive-ones-iii"}