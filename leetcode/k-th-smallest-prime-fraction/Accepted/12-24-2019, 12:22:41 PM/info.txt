{"id":288211541,"lang":"cpp","time":"1 year, 9 months","timestamp":1577182961,"status_display":"Accepted","runtime":"1388 ms","url":"/submissions/detail/288211541/","is_pending":"Not Pending","title":"K-th Smallest Prime Fraction","memory":"207.4 MB","code":"class Solution {\npublic:\n    vector<int> kthSmallestPrimeFraction(vector<int>& A, int K) {\n        size_t sz = A.size();\n        priority_queue<pair<double, pair<int, int>>> data;\n        size_t count = 0;\n        for(size_t i = 0; i < sz; ++i) {\n            for(size_t j = i + 1; j < sz; ++j) {\n                if(count < K) {\n                    data.push(make_pair((double)A[i] / (double)A[j], make_pair(A[i], A[j])));\n                } else {\n                    if((double)A[i] / (double)A[j] < data.top().first) {\n                        data.pop();\n                        data.push(make_pair((double)A[i] / (double)A[j], make_pair(A[i], A[j])));\n                    }   \n                }\n                ++count;\n            }\n        }\n\n        return {data.top().second.first, data.top().second.second};\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111","title_slug":"k-th-smallest-prime-fraction"}