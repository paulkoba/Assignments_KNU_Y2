{"id":481657824,"lang":"cpp","time":"5Â months","timestamp":1618648944,"status_display":"Accepted","runtime":"220 ms","url":"/submissions/detail/481657824/","is_pending":"Not Pending","title":"Maximum Number of Non-Overlapping Subarrays With Sum Equals Target","memory":"95.6 MB","code":"class Solution {\npublic:\n    int maxNonOverlapping(vector<int>& nums, int target) {\n        set<int> prefixSumSeen;\n        prefixSumSeen.insert(0);\n        int currentSum = 0;\n        int output = 0;\n        for(int i = 0; i < nums.size(); ++i) {\n            currentSum += nums[i];\n            if(prefixSumSeen.find(currentSum - target) != prefixSumSeen.end()) {\n                prefixSumSeen.clear();\n                prefixSumSeen.insert(0);\n                ++output;\n                currentSum = 0;\n            } else {\n                prefixSumSeen.insert(currentSum);\n            }\n        }\n        \n        return output;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-number-of-non-overlapping-subarrays-with-sum-equals-target"}