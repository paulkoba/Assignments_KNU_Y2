{"id":542050001,"lang":"cpp","time":"4 weeks, 1 day","timestamp":1629573397,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/542050001/","is_pending":"Not Pending","title":"Sudoku Solver","memory":"6.3 MB","code":"class Solution {\npublic:\n    vector<uint16_t> rows;\n    vector<uint16_t> cols;\n    vector<uint16_t> quads;\n    \n    bool solve(vector<vector<char>>& board, vector<vector<char>>& out, int i, int j) {\n        if(j == 9) {\n            return solve(board, out, i + 1, 0);\n        }\n        \n        if(i == 9) return true;\n        \n        if(board[i][j] != '.') return solve(board, out, i, j + 1);\n\n        for(int ii = 0; ii < 9; ++ii) {\n            if(rows[i] & (1 << ii)) continue;\n            if(cols[j] & (1 << ii)) continue;\n            if(quads[i / 3 + (j / 3 * 3)] & (1 << ii)) continue;\n            \n            rows[i] |= (1 << ii);\n            cols[j] |= (1 << ii);\n            quads[i / 3 + (j / 3 * 3)] |= (1 << ii);\n            \n            out[i][j] = '1' + ii;\n            bool result = solve(board, out, i, j + 1);\n            \n            rows[i] ^= (1 << ii);\n            cols[j] ^= (1 << ii);\n            quads[i / 3 + (j / 3 * 3)] ^= (1 << ii);\n            \n            if(result) return true;\n        }\n        \n        return false;\n    }\n    \n    void solveSudoku(vector<vector<char>>& board) {\n        vector<vector<char>> out = board;\n        rows = vector<uint16_t>(9);\n        cols = vector<uint16_t>(9);\n        quads = vector<uint16_t>(9);\n        \n        for(int i = 0; i < 9; ++i) {\n            for(int j = 0; j < 9; ++j) {\n                if(board[i][j] == '.') continue;\n                \n                rows[i] |= 1 << (board[i][j] - '1');\n                cols[j] |= 1 << (board[i][j] - '1');\n                quads[i / 3 + (j / 3 * 3)] |= 1 << (board[i][j] - '1');\n            }\n        }\n\n        solve(board, out, 0, 0);\n        \n        board = out;\n    }\n};","compare_result":"111111","title_slug":"sudoku-solver"}