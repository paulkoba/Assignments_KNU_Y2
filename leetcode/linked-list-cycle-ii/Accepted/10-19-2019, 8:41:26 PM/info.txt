{"id":271281094,"lang":"cpp","time":"1 year, 11 months","timestamp":1571506886,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/271281094/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"12.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        if(!head) return nullptr;\n        \n        unordered_map<ListNode*, bool> visited;\n        visited[head] = 0;\n        while(head->next) {\n            if(visited.find(head->next) != visited.end()) return head->next;\n            visited[head->next] = 0;\n            head = head->next;\n        }\n        return nullptr;\n    }\n};","compare_result":"1111111111111111","title_slug":"linked-list-cycle-ii"}