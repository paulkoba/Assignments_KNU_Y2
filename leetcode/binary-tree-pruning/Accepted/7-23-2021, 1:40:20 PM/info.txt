{"id":527019310,"lang":"cpp","time":"1 month, 4 weeks","timestamp":1627036820,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/527019310/","is_pending":"Not Pending","title":"Binary Tree Pruning","memory":"9.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* pruneTree(TreeNode* root) {\n        if(!root) return root;\n        \n        root->left = pruneTree(root->left);\n        root->right = pruneTree(root->right);\n        \n        if(!root->left && !root->right && root->val == 0) return nullptr;\n        \n        return root;\n    }\n};","compare_result":"111111111111111111111111111111","title_slug":"binary-tree-pruning"}