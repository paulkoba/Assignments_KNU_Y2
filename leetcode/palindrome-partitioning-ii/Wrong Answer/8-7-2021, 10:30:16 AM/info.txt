{"id":534581213,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1628321416,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/534581213/","is_pending":"Not Pending","title":"Palindrome Partitioning II","memory":"N/A","code":"class Solution {\npublic:\n    int minCut(const string& s) {\n        int n = s.size();\n        vector<int> count(n + 1, 0);\n        \n        for(int i = 0; i < n + 1; ++i) count[i] = i - 1;\n        for(int i = 0; i < n; ++i) {\n            for(int j = 0; i - j >= 0 && i + j < n && s[i - j] == s[i + j]; ++j) {\n                count[i + j + 1] = min(count[i + j + 1], count[i - j] + 1);\n            }\n            \n            for(int j = 1; i - j + 1 >= 0 && i + j < n && s[i - j + 1] == s[i + 1]; ++j) {\n                count[i + j + 1] = min(count[i + j + 1], count[i - j + 1] + 1);\n            }\n        }\n        return count[n];\n    }\n};","compare_result":"111111110111111111111101101011100","title_slug":"palindrome-partitioning-ii"}