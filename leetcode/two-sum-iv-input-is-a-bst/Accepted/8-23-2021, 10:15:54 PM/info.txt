{"id":543052846,"lang":"cpp","time":"3 weeks, 6 days","timestamp":1629746154,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/543052846/","is_pending":"Not Pending","title":"Two Sum IV - Input is a BST","memory":"36.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorder(TreeNode* root, vector<int>& a) {\n        if(!root) return;\n        \n        inorder(root->left, a);\n        a.push_back(root->val);\n        inorder(root->right, a);\n    }\n    \n    bool findTarget(TreeNode* root, int k) {\n        vector<int> a;\n        inorder(root, a);\n        \n        int last = a.size() - 1;\n        int first = 0;\n        while(true) {\n            while(last > first && a[first] + a[last] > k) --last;\n            while(last > first && a[first] + a[last] < k) ++first;\n            if(last > first && a[first] + a[last] == k) return true;\n            \n            if(last <= first) return false;\n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"two-sum-iv-input-is-a-bst"}