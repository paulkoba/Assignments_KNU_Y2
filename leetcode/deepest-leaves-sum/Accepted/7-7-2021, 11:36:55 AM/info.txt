{"id":518685123,"lang":"cpp","time":"2 months, 2 weeks","timestamp":1625647015,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/518685123/","is_pending":"Not Pending","title":"Deepest Leaves Sum","memory":"38.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int depth(TreeNode* root) {\n        if(!root) return 0;\n        \n        return max(1 + depth(root->left), 1 + depth(root->right)); \n    }\n    \n    int sumAtDepth(TreeNode* root, int d) {\n        if(!root) return 0;\n        if(d == 1) return root->val;\n        \n        return sumAtDepth(root->left, d - 1) + \n            sumAtDepth(root->right, d - 1);\n    }\n    \n    int deepestLeavesSum(TreeNode* root) {\n        return sumAtDepth(root, depth(root));\n    }\n};","compare_result":"111111111111111","title_slug":"deepest-leaves-sum"}