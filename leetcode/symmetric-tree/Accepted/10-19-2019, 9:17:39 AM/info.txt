{"id":271179149,"lang":"cpp","time":"1 year, 11 months","timestamp":1571465859,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/271179149/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"14.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSymmetric(TreeNode* root) {\n        return isMirror(root, root);\n    }\n    \n    bool isMirror(TreeNode* a, TreeNode* b) {\n        if(!a && !b) return true;\n        if(!a || !b) return false;\n        return a->val == b->val &&\n            isMirror(a->left, b->right) &&\n            isMirror(b->left, a->right);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}