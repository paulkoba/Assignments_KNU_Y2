{"id":271032549,"lang":"cpp","time":"1 year, 11 months","timestamp":1571422348,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/271032549/","is_pending":"Not Pending","title":"Merge Intervals","memory":"12.3 MB","code":"bool greaterVec(const vector<int>& a, const vector<int>& b) {\n    return a[0] < b[0];\n}\n\nclass Solution {\npublic:\n    vector<vector<int>> merge(vector<vector<int>>& intervals) {\n        int sz = intervals.size();\n        if(sz == 0) return intervals;        \n        sort(intervals.begin(), intervals.end(), greaterVec);\n        int pos = 0;\n        int lOut = 0;\n        vector<char> inOut(sz);\n        while(pos < sz - 1) {\n            if(intervals[pos][1] >= intervals[pos + 1][0]) {\n                intervals[pos + 1][1] = max(intervals[pos + 1][1], intervals[pos][1]);\n                intervals[pos + 1][0] = min(intervals[pos + 1][0], intervals[pos][0]);\n                inOut[pos] = 0;\n            } else {\n                inOut[pos] = 1;\n            }\n            lOut += inOut[pos];\n            pos++;\n        }\n        inOut[sz - 1] = true;\n        vector<vector<int>> output(lOut + 1);\n        for(int i = 0; i < sz; ++i) if(inOut[i]) output[lOut--] = intervals[i];\n        return output;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-intervals"}