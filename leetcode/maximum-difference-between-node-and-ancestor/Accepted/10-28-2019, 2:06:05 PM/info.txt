{"id":273920336,"lang":"cpp","time":"1 year, 10 months","timestamp":1572264365,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/273920336/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"13.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nint maxDiff(const TreeNode* root, const int lBound, const int rBound) {\n    if(!root) return 0;\n    return max(max(abs(root->val - lBound), abs(root->val - rBound)), \n               max(maxDiff(root->left, min(root->val, lBound), max(root->val, rBound)), \n               maxDiff(root->right, min(root->val, lBound), max(root->val, rBound))));\n}\n\nclass Solution {\npublic:\n    int maxAncestorDiff(TreeNode* root) {\n        if(!root) return 0;\n        return max(maxDiff(root->left, root->val, root->val), maxDiff(root->right, root->val, root->val));\n    }\n};","compare_result":"111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor"}