{"id":512165858,"lang":"cpp","time":"2Â months, 4Â weeks","timestamp":1624467803,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/512165858/","is_pending":"Not Pending","title":"Reverse Linked List II","memory":"7.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseBetween(ListNode* head, int left, int right) {        \n        if(left == right) return head;\n        if(!head || !head->next) return head;\n        \n        head = new ListNode(0, head);\n        ++left;\n        ++right;\n        \n        ListNode* output = head;\n        \n        while(left > 2) {\n            head = head->next;\n            --left;\n            --right;\n        }\n        \n        ListNode* lReverse = head;\n        ListNode* lRevNext = head->next;\n        ListNode* next = nullptr, *prev = nullptr, *curr = head->next;\n        while(--right) {\n            next = curr->next;\n            curr->next = prev;\n            prev = curr;\n            curr = next;\n        }\n        \n        lRevNext->next = next;\n        \n        lReverse->next = prev;\n        \n        ListNode* res = output->next;\n        delete output;\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111","title_slug":"reverse-linked-list-ii"}