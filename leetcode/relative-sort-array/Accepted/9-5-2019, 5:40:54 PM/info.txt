{"id":258044712,"lang":"cpp","time":"2Â years","timestamp":1567694454,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/258044712/","is_pending":"Not Pending","title":"Relative Sort Array","memory":"9 MB","code":"class Solution {\npublic:\n    vector<int> relativeSortArray(const vector<int>& arr1, const vector<int>& arr2) {\n        std::vector<int> output(arr1.size());\n        std::vector<int> overflow;\n        unordered_map<int, int> count;\n        for(int i : arr2) {\n            count[i] = 0;\n        }\n        \n        for(int i : arr1) {\n            if(count.find(i) != count.end()) {\n                count[i]++;\n            } else {\n                overflow.push_back(i);\n            }\n        }\n        \n        int index = 0;\n        for(int i : arr2) {\n            int temp = count[i];\n            for(int j = 0; j < temp; ++j) {\n                output[index] = i;\n                index++;\n            }\n        }\n        \n        sort(overflow.begin(), overflow.end());\n        \n        copy(overflow.begin(), overflow.end(), &(output[index]));\n        \n        return output;\n    }\n};","compare_result":"1111111111111111","title_slug":"relative-sort-array"}