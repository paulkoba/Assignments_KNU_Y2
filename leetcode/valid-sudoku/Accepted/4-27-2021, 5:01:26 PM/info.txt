{"id":485864324,"lang":"cpp","time":"4 months, 3 weeks","timestamp":1619532086,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/485864324/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"17.8 MB","code":"class Solution {\npublic:\n    bool isValidSudoku(vector<vector<char>>& board) {\n        for(int i = 0; i < 9; ++i) {\n            bool foundC[9] = {};\n            bool foundR[9] = {};\n            for(int j = 0; j < 9; ++j) {\n                if(board[i][j] != '.') {\n                    if(foundC[board[i][j] - '1']) return false;\n                    foundC[board[i][j] - '1'] = true;\n                }\n                \n                if(board[j][i] != '.') {\n                    if(foundR[board[j][i] - '1']) return false;\n                    foundR[board[j][i] - '1'] = true;\n                }\n            }\n        }\n        \n        for(int i = 0; i < 3; ++i) {\n            for(int j = 0; j < 3; ++j) {\n                bool found[9] = {};\n                for(int k = 0; k < 3; ++k) {\n                    for(int l = 0; l < 3; ++l) {\n                        if(board[i * 3 + k][j * 3 + l] == '.') continue;\n                        if(found[board[i * 3 + k][j * 3 + l] - '1']) return false;\n                        found[board[i * 3 + k][j * 3 + l] - '1'] = true;\n                    }\n                }\n            }\n        }\n        \n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-sudoku"}