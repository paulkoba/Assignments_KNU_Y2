{"id":541610984,"lang":"cpp","time":"1Â month","timestamp":1629493761,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/541610984/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"20.7 MB","code":"class Solution {\npublic:\n    bool isValidSudoku(vector<vector<char>>& board) {\n        for(int i = 0; i < 3; ++i) {\n            for(int j = 0; j < 3; ++j) {\n                unordered_map<char, int> count;\n                for(int m = 0; m < 3; ++m) {\n                    for(int n = 0; n < 3; ++n) {\n                        count[board[3 * i + m][3 * j + n]]++;\n                    }\n                }\n                \n                for(const auto& p : count) if(p.second >= 2 && p.first != '.') return false;\n            }\n        }\n\n        for(int i = 0; i < 9; ++i) {\n            unordered_map<char, int> count;\n            unordered_map<char, int> count2;\n\n            for(int j = 0; j < 9; ++j) {\n                count[board[i][j]]++;\n                count2[board[j][i]]++;\n            }\n            \n            for(const auto& p : count) if(p.second >= 2 && p.first != '.') return false;\n            for(const auto& p : count2) if(p.second >= 2 && p.first != '.') return false;\n        }\n        \n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-sudoku"}