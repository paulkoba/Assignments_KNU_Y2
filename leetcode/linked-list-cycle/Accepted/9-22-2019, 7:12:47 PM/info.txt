{"id":263196914,"lang":"cpp","time":"1 year, 12 months","timestamp":1569168767,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/263196914/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"12.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode* head) {\n        unordered_map<ListNode*, int> visited;\n        \n        if(!head) return false;\n        \n        while(head->next) {\n            head = head->next;\n            if(visited.find(head) != visited.end()) return true;\n            visited[head] = 0;\n        }\n        \n        return false;\n    }\n};","compare_result":"11111111111111111","title_slug":"linked-list-cycle"}