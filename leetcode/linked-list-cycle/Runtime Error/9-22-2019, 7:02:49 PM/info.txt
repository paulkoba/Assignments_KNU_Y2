{"id":263194884,"lang":"cpp","time":"1 year, 12 months","timestamp":1569168169,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/263194884/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode* head) {\n        unordered_map<ListNode*, char> visited;\n        while(head->next) {\n            head = head->next;\n            if(visited.find(head) != visited.end()) return true;\n            visited[head] =  0;\n        }\n        \n        return false;\n    }\n};","compare_result":"11100000000000000","title_slug":"linked-list-cycle"}