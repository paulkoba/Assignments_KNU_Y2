{"id":545289541,"lang":"cpp","time":"3 weeks, 2 days","timestamp":1630097597,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/545289541/","is_pending":"Not Pending","title":"Longest Uncommon Subsequence II","memory":"N/A","code":"class Solution {\npublic:\n    bool isSubsequence(string& str1, string& str2, int start, int end) {\n        for(int i = 0; start < end && i < str2.size(); ++i) {\n            if(str2[i] == str1[start]) ++start;\n        }\n        \n        return start == end;\n    }\n    \n    int findLUSlength(vector<string>& strs) {\n        int best = -1;\n        for(int i = 0; i < strs.size(); ++i) {\n            for(int j = 0; j < strs[i].size(); ++j) {\n                for(int k = j + 1; k < strs[i].size(); ++k) {\n                    bool flag = false;\n                    for(int u = 0; u < strs.size(); ++u) {\n                        if(u == i) continue;\n                        flag = isSubsequence(strs[i], strs[u], j, k);\n                        if(flag) break;\n                    }\n                    if(!flag) {\n                        best = max(best, k - j + 1);\n                    }\n                }\n            }\n        }\n        return best;\n    }\n};","compare_result":"11111110001100010111110001001010110111111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-uncommon-subsequence-ii"}