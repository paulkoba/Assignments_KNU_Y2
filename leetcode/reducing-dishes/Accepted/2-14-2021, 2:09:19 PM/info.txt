{"id":455920992,"lang":"cpp","time":"7 months, 1 week","timestamp":1613304559,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/455920992/","is_pending":"Not Pending","title":"Reducing Dishes","memory":"8.3 MB","code":"class Solution {\npublic:\n    int maxSatisfaction(vector<int>& satisfaction) {\n        int max = 0;\n        \n        sort(satisfaction.begin(), satisfaction.end());\n        \n        std::vector<int> hint(satisfaction.size(), 0);\n        for(int i = 0; i < satisfaction.size(); ++i) hint[i] = i;\n        \n        int low = 0, high = satisfaction.size() - 1;\n        \n        auto cmp = [&] (int position, int unused) {\n            int res = 0;\n            for(int i = position; i < satisfaction.size(); ++i) {\n                res += (i - position + 1) * satisfaction[i];\n            }\n            \n            ++position;\n            \n            for(int i = position; i < satisfaction.size(); ++i) {\n                res -= (i - position + 1) * satisfaction[i];\n            }\n            \n            return res < 0;\n        };\n        auto it = lower_bound(hint.begin(), hint.end(), 0, cmp);\n        \n        if(it == hint.end()) return 0;\n        int result = *it;\n\n        int res = 0;\n        for(int i = result; i < satisfaction.size(); ++i) {\n            res += (i - result + 1) * satisfaction[i];\n        }\n        \n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111","title_slug":"reducing-dishes"}