{"id":278990594,"lang":"cpp","time":"1 year, 10 months","timestamp":1573805455,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/278990594/","is_pending":"Not Pending","title":"Kth Smallest Element in a BST","memory":"21.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nint numElements(TreeNode* root) {\n    if(!root) return 0;\n    return numElements(root->left) + numElements(root->right) + 1;\n}\n\nclass Solution {\npublic:\n    int kthSmallest(TreeNode* root, int k) {\n        int t = numElements(root->left) + 1;\n        if(t == k) return root->val;\n        if(t < k) return kthSmallest(root->right, k - t);\n        return kthSmallest(root->left, k);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-bst"}