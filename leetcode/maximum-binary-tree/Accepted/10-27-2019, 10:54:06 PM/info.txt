{"id":273724186,"lang":"cpp","time":"1 year, 10 months","timestamp":1572209646,"status_display":"Accepted","runtime":"80 ms","url":"/submissions/detail/273724186/","is_pending":"Not Pending","title":"Maximum Binary Tree","memory":"29 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\nprivate:\n    TreeNode* constructMBT(const vector<int>& nums, int first, int last) {\n        if(first == last) return nullptr;\n        int maxIndex = first;\n        for(int i = first; i < last; ++i) {\n            if(nums[maxIndex] < nums[i]) maxIndex = i;    \n        }\n        TreeNode* output = new TreeNode(nums[maxIndex]);\n        output->left = constructMBT(nums, first, maxIndex);\n        output->right = constructMBT(nums, maxIndex + 1, last);\n        return output;\n    }\npublic:\n    TreeNode* constructMaximumBinaryTree(const vector<int>& nums) {\n        return constructMBT(nums, 0, nums.size());\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-binary-tree"}