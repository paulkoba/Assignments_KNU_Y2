{"id":282946002,"lang":"cpp","time":"1 year, 9 months","timestamp":1575210503,"status_display":"Accepted","runtime":"212 ms","url":"/submissions/detail/282946002/","is_pending":"Not Pending","title":"Maximum Average Subarray I","memory":"16.8 MB","code":"class Solution {\npublic:\n    double findMaxAverage(vector<int>& nums, int k) {\n        int sz = nums.size();\n        int sum = accumulate(nums.begin(), nums.begin() + k, 0);\n        int maxSum = sum;\n        for(int i = k; i < sz; ++i) {\n            sum += nums[i] - nums[i - k];\n            maxSum = max(maxSum, sum);\n        }\n        return (double)maxSum / k;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-average-subarray-i"}