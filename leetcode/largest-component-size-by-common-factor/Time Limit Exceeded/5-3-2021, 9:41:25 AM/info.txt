{"id":488199658,"lang":"cpp","time":"4 months, 2 weeks","timestamp":1620024085,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/488199658/","is_pending":"Not Pending","title":"Largest Component Size by Common Factor","memory":"N/A","code":"class Solution {\npublic:\n    vector<int> parents;\n    vector<int> sz;\n    \n    int find_set(int v) {\n        if(v == parents[v]) return v;\n        \n        return parents[v] = find_set(parents[v]);\n    }\n    \n    void union_sets(int a, int b) {\n        a = find_set(a);\n        b = find_set(b);\n        \n        if(a != b) {\n            if(sz[a] < sz[b]) swap(a, b);\n            \n            parents[b] = a;\n            sz[a] += sz[b];\n        }\n    }\n    \n    int largestComponentSize(vector<int>& A) {\n        int n = A.size();\n        parents.clear();\n        parents.reserve(n);\n        sz.clear();\n        sz.reserve(n);\n        \n        for(int i = 0; i < n; ++i) {\n            parents[i] = i;\n            sz[i] = 1;\n        }\n        \n        for(int i = 0; i < n; ++i) {\n            for(int j = 0; j < i; ++j) {\n                int g = __gcd(A[i], A[j]);\n                if(g != 1) {\n                    union_sets(i, j);\n                }\n            }\n        }\n        \n        int m = 0;\n        \n        for(int i = 0; i < n; ++i) m = max(sz[i], m);\n        \n        return m;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111100000000000000000000000000","title_slug":"largest-component-size-by-common-factor"}