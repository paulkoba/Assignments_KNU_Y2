{"id":488223881,"lang":"cpp","time":"4 months, 2 weeks","timestamp":1620028745,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/488223881/","is_pending":"Not Pending","title":"Largest Component Size by Common Factor","memory":"N/A","code":"bool isPrime[100000] = {};\nbool isInitialized = false;\nvector<pair<int, int>> primes;\n\nclass Solution {\npublic:\n    vector<int> parents;\n    vector<int> sz;\n    \n    int find_set(int v) {\n        if(v == parents[v]) return v;\n        \n        return parents[v] = find_set(parents[v]);\n    }\n    \n    void union_sets(int a, int b) {\n        a = find_set(a);\n        b = find_set(b);\n        \n        if(a != b) {\n            if(sz[a] < sz[b]) swap(a, b);\n            \n            parents[b] = a;\n            sz[a] += sz[b];\n        }\n    }\n    \n    int largestComponentSize(vector<int>& A) {\n        if(A.size() == 1) return 1;\n        \n        if(!isInitialized) {\n            for(int i = 0; i < 100000; ++i) isPrime[i] = 1;\n\n            isPrime[0] = 0;\n            isPrime[1] = 0;\n            isPrime[2] = 1;\n\n            for(int i = 2; i < 100000; ++i) {\n                if(!isPrime[i]) continue;\n                for(int j = i * 2; j < 100000; j += i) isPrime[j] = 0;\n            }\n            \n            for(int i = 0; i < 100000; ++i) if(isPrime[i]) primes.push_back({i, -1});\n            \n            isInitialized = true;\n        }\n                \n        int n = A.size();\n        parents.clear();\n        parents.reserve(n);\n        sz.clear();\n        sz.reserve(n);\n                \n        for(int i = 0; i < n; ++i) {\n            parents[i] = i;\n            sz[i] = 1;\n        }\n        \n        for(auto& it : primes) it.second = -1;\n        \n        for(int i = 0; i < n; ++i) {            \n            for(auto& it : primes) {\n                if(it.first > A[i]) break;\n                if(A[i] % it.first == 0) {\n                    if(it.second == -1) {\n                        it.second = i;\n                    } else {\n                        union_sets(i, it.second);\n                    }\n                    A[i] /= it.first;\n                }\n            }\n        }\n        \n        int m = 0;\n        \n        for(int i = 0; i < n; ++i) m = max(sz[i], m);\n        \n        return m;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111110","title_slug":"largest-component-size-by-common-factor"}