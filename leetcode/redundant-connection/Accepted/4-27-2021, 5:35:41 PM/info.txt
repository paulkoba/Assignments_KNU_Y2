{"id":485875027,"lang":"cpp","time":"4 months, 3 weeks","timestamp":1619534141,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/485875027/","is_pending":"Not Pending","title":"Redundant Connection","memory":"8.8 MB","code":"class Solution {    \npublic:\n    vector<int> findRedundantConnection(vector<vector<int>>& edges) {\n        int n = edges.size() + 1;\n        \n        vector<int> parents(n);\n        for(int i = 0; i < n; ++i) parents[i] = i;\n\n        function<int(int)> findSet = [&](int a) {\n            if(parents[a] != a) return parents[a] = findSet(parents[a]);\n            \n            return a;\n        };\n        \n        for(const auto& p : edges) {\n            if(findSet(p[1]) == findSet(p[0])) return p;\n            \n            parents[findSet(p[1])] = p[0];\n        }\n        \n        return {};\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"redundant-connection"}