{"id":445132014,"lang":"cpp","time":"8Â months","timestamp":1611081875,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/445132014/","is_pending":"Not Pending","title":"The K Weakest Rows in a Matrix","memory":"10.7 MB","code":"class Solution {\npublic:\n    vector<int> kWeakestRows(vector<vector<int>>& mat, int k) {\n        vector<int> p(mat.size());\n        \n        for(int i = 0; i < mat.size(); ++i) {\n            for(int ch : mat[i]) {\n                if(ch == 0) break;\n                ++p[i];\n            }\n        }\n        \n        vector<pair<int, int>> num(mat.size());\n        \n        for(int i = 0; i < mat.size(); ++i) {\n            num[i] = make_pair(-p[i], -i);\n        }\n        \n        make_heap(num.begin(), num.end());\n        \n        vector<int> output;\n        for(int i = 0; i < k; ++i) {\n            pop_heap(num.begin(), num.end());\n            output.push_back(-num.back().second);\n            num.pop_back();\n        }\n        \n        return output;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111","title_slug":"the-k-weakest-rows-in-a-matrix"}