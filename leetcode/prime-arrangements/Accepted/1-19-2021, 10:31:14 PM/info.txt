{"id":445166136,"lang":"cpp","time":"8Â months","timestamp":1611088274,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/445166136/","is_pending":"Not Pending","title":"Prime Arrangements","memory":"6.3 MB","code":"class Solution {\npublic:\n    int numPrimeArrangements(int n) {\n        vector<int> sieve(n + 1);\n        \n        sieve[0] = 1;\n        sieve[1] = 1;\n        \n        for(int i = 2; i <= n; ++i) {\n            if(sieve[i] == 0) {\n                for(int j = i * 2; j <= n; j += i) {\n                    sieve[j] = 1;\n                } \n            }\n        }\n        \n        int count = 0;\n        \n        for(int i = 0; i <= n; ++i) \n            if(sieve[i] == 0) ++count;\n        \n        uint64_t output = 1;\n        \n        for(int i = 1; i <= count; ++i) {\n            output = output * i;\n            output %= 1000000007;\n        }\n        \n        count = n - count;\n        \n        for(int i = 1; i <= count; ++i) {\n            output = output * i;\n            output %= 1000000007;\n        }\n        \n        return output;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"prime-arrangements"}