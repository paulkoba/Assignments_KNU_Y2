{"id":271279906,"lang":"cpp","time":"1 year, 11 months","timestamp":1571506559,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/271279906/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        if(!root) return nullptr;\n        \n        TreeNode* l = invertTree(root->left);\n        TreeNode* r = invertTree(root->right);\n        root->left = r;\n        root->right = l;\n        \n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree"}