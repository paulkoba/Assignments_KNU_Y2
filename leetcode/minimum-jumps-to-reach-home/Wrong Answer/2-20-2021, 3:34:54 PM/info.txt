{"id":458354305,"lang":"cpp","time":"7Â months","timestamp":1613828094,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/458354305/","is_pending":"Not Pending","title":"Minimum Jumps to Reach Home","memory":"N/A","code":"class Solution {\npublic:\n    int minimumJumps(vector<int>& forbidden, int a, int b, int x) {\n        unordered_set<int> visitedFw;\n        unordered_set<int> visitedBw;\n        int turns = 0;\n        \n        sort(forbidden.begin(), forbidden.end());\n        \n        vector<pair<int, bool>> toVisit;\n        toVisit.push_back({0, true});\n        while(!toVisit.empty()) {\n            vector<pair<int, bool>> toVisitTemp;\n            for(const auto& pos : toVisit) {\n                if(pos.first > 4000) continue;\n                if(binary_search(forbidden.begin(), forbidden.end(), pos.first)) continue;\n                if(pos.first == x) return turns;\n                if(visitedFw.find(pos.first) != visitedFw.end()) continue;\n                if(!pos.second && visitedBw.find(pos.first) != visitedBw.end()) continue;\n                \n                if(pos.second && pos.first - b > 0) {\n                    toVisitTemp.push_back({pos.first - b, false});\n                }\n                \n                toVisitTemp.push_back({pos.first + a, true});\n                \n                if(pos.second) {\n                    visitedFw.insert(pos.first);\n                } else {\n                    visitedBw.insert(pos.first);\n                }\n            }\n            toVisit = toVisitTemp;\n            \n            ++turns;\n        }\n        \n        return -1;\n    }\n};","compare_result":"1111111111110110111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-jumps-to-reach-home"}