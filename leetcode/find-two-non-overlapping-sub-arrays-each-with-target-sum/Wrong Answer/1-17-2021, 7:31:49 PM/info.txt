{"id":444180014,"lang":"cpp","time":"8Â months","timestamp":1610904709,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/444180014/","is_pending":"Not Pending","title":"Find Two Non-overlapping Sub-arrays Each With Target Sum","memory":"N/A","code":"class Solution {\npublic:\n    int minSumOfLengths(vector<int>& arr, int target) {\n        int length1 = arr.size();\n        int length2 = arr.size();\n        int current = 0;\n        int currentLength = 0;\n        int lower = 0;\n        for(int i = 0; i < arr.size(); ++i) {\n            current += arr[i];\n            ++currentLength;\n            if(current == target) {\n                if(length1 > currentLength) {\n                    length2 = length1;\n                    length1 = currentLength;\n                } else if(length2 > currentLength) {\n                    length2 = currentLength;\n                }\n            }\n            \n            while(current > target) {\n                current -= arr[lower++];\n                --currentLength;\n            }\n        }\n        \n        if(current == target) {\n            if(length1 > currentLength) {\n                length2 = length1;\n                length1 = currentLength;\n            } else if(length2 > currentLength) {\n                length2 = currentLength;\n            }\n        }\n        \n        if(length2 == arr.size()) return -1;\n        \n        return length1 + length2;\n    }\n};","compare_result":"111110010011010110100011110100100000001011001010100001110111","title_slug":"find-two-non-overlapping-sub-arrays-each-with-target-sum"}