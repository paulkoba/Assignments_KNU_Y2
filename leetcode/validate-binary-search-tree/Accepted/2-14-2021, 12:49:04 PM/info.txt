{"id":455905161,"lang":"cpp","time":"7 months, 1 week","timestamp":1613299744,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/455905161/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isValidBST(TreeNode* root, int64_t max, int64_t min) {\n        if(!root) return true;\n        if(root->val >= max || root->val <= min) return false;\n        \n        return isValidBST(root->left, root->val, min) && isValidBST(root->right, max, root->val);\n    }\n    \n    bool isValidBST(TreeNode* root) {\n        if(!root) return true;\n        \n        return isValidBST(root, std::numeric_limits<int64_t>::max(), std::numeric_limits<int64_t>::min());\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree"}