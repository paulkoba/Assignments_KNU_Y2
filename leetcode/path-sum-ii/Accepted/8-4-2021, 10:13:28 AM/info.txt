{"id":533065612,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1628061208,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/533065612/","is_pending":"Not Pending","title":"Path Sum II","memory":"39.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    vector<vector<int>> pathSum(TreeNode* root, int targetSum, vector<int> currentPath) {\n        if(!root) return {};\n        currentPath.push_back(root->val);\n        if(!root->left && !root->right) {\n            int result = accumulate(currentPath.begin(), currentPath.end(), 0);\n            if(result == targetSum) return {currentPath};\n        }\n        auto r1 = pathSum(root->left, targetSum, currentPath);\n        auto r2 = pathSum(root->right, targetSum, currentPath);\n        \n        r1.insert(r1.end(), r2.begin(), r2.end());\n        \n        return r1;\n    }\n    \npublic:\n    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {\n        if(!root) return {};\n        return pathSum(root, targetSum, {});\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii"}