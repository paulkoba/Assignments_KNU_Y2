{"id":455911945,"lang":"cpp","time":"7 months, 1 week","timestamp":1613301747,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/455911945/","is_pending":"Not Pending","title":"Path Sum II","memory":"19.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void dfs(TreeNode* root, int targetSum, vector<vector<int>>& output, vector<int>& currentPath) {\n        if(!root) return;\n\n        currentPath.push_back(root->val);\n        \n        if(!root->left && !root->right) {\n            if(targetSum == root->val) output.push_back(currentPath);\n        } else if(!root->left) {\n            dfs(root->right, targetSum - root->val, output, currentPath);\n        } else if(!root->right) {\n            dfs(root->left, targetSum - root->val, output, currentPath);\n        } else {\n            dfs(root->right, targetSum - root->val, output, currentPath);\n            dfs(root->left, targetSum - root->val, output, currentPath);\n        }\n        \n        currentPath.pop_back();\n    }\n    \n    vector<vector<int>> pathSum(TreeNode* root, int targetSum) {\n        vector<vector<int>> output;\n        vector<int> currentPath;\n        \n        dfs(root, targetSum, output, currentPath);\n        \n        return output;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"path-sum-ii"}