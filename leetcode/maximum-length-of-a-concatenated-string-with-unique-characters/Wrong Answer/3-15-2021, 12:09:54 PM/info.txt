{"id":468051793,"lang":"cpp","time":"6 months, 1 week","timestamp":1615802994,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/468051793/","is_pending":"Not Pending","title":"Maximum Length of a Concatenated String with Unique Characters","memory":"N/A","code":"class Solution {\npublic:\n    int maxLength(vector<string>& arr) {\n        uint32_t field = 0;\n        \n        vector<uint32_t> containsChars(arr.size(), 0);\n        \n        for(int i = 0; i < arr.size(); ++i) {\n            for(char ch : arr[i]) {\n                containsChars[i] |= (1 << (ch - 'a'));\n            }\n        }\n        \n        int out = 0;\n                \n        while(field != (2 << (arr.size() - 1))) {\n            uint32_t copy = field;\n            \n            bool correct = true;\n            uint32_t used = 0;\n            \n            while(copy) {\n                int pos = __builtin_ffsl(copy) - 1;\n                copy ^= (1 << pos);\n                \n                if((used & containsChars[pos])) {\n                    correct = false;\n                    break;\n                }\n                \n                used |= containsChars[pos];\n            }\n            if(correct) out = max(out, __builtin_popcount(used));\n            \n            ++field;\n        }\n        \n        return out;\n    }\n};","compare_result":"1111111111011111111110111111100100111111001011101100111111011111111111111111101111111","title_slug":"maximum-length-of-a-concatenated-string-with-unique-characters"}