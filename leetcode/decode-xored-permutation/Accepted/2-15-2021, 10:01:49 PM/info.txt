{"id":456455781,"lang":"cpp","time":"7Â months","timestamp":1613419309,"status_display":"Accepted","runtime":"148 ms","url":"/submissions/detail/456455781/","is_pending":"Not Pending","title":"Decode XORed Permutation","memory":"101.5 MB","code":"class Solution {\npublic:\n    vector<int> decode(vector<int>& encoded) {\n        \n        vector<int> hashupto(encoded.size(), 0);\n        hashupto[0] = encoded[0];\n        for(int i = 1; i < encoded.size(); ++i) hashupto[i] = encoded[i] ^ hashupto[i - 1];\n        \n        int xor1 = 0;\n        for(int i = 0; i < encoded.size(); ++i) xor1 ^= hashupto[i];\n        for(int i = 1; i <= encoded.size() + 1; ++i) xor1 ^= i;\n        \n        encoded[0] ^= xor1;\n        \n        for(int i = 0; i < hashupto.size(); ++i) hashupto[i] ^= xor1;\n        \n        hashupto.insert(hashupto.begin(), xor1);\n        \n        return hashupto;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"decode-xored-permutation"}