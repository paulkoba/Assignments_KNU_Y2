{"id":273919140,"lang":"cpp","time":"1 year, 10 months","timestamp":1572263716,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/273919140/","is_pending":"Not Pending","title":"Minimum Size Subarray Sum","memory":"N/A","code":"class Solution {\npublic:\n    int minSubArrayLen(int s, vector<int>& nums) {\n        int sz = nums.size();\n        if(sz == 0) return s <= 0;\n        int sum = 0;\n        int tail = 0;\n        int minSubLen = numeric_limits<int>::max();\n        for(int i = 0; i < sz; ++i) {\n            sum += nums[i];\n            if(sum < s) continue;\n            while(tail <= i && sum >= s) {\n                sum -= nums[tail++];\n            }\n            minSubLen = min(minSubLen, i - tail + 2);\n        }\n        return minSubLen;\n    }\n};","compare_result":"111111111111011","title_slug":"minimum-size-subarray-sum"}