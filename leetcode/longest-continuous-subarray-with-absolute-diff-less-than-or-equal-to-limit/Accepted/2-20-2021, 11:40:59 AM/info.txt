{"id":458306611,"lang":"cpp","time":"7Â months","timestamp":1613814059,"status_display":"Accepted","runtime":"236 ms","url":"/submissions/detail/458306611/","is_pending":"Not Pending","title":"Longest Continuous Subarray With Absolute Diff Less Than or Equal to Limit","memory":"77.7 MB","code":"class Solution {\npublic:\n    int longestSubarray(vector<int>& nums, int limit) {\n        map<int, int, greater<int>> maxQ;\n        map<int, int> minQ;\n        \n        int startIdx = 0;\n        int output = 0;\n        for(int i = 0; i < nums.size(); ++i) {\n            ++minQ[nums[i]];\n            ++maxQ[nums[i]];\n            \n            while(maxQ.begin()->first - minQ.begin()->first > limit && startIdx < i) {\n                --minQ[nums[startIdx]];\n                --maxQ[nums[startIdx]];\n                \n                if(minQ[nums[startIdx]] <= 0) {\n                    minQ.erase(nums[startIdx]);\n                    maxQ.erase(nums[startIdx]);\n                }\n                \n                ++startIdx;\n            }\n            \n            output = max(output, i - startIdx + 1);\n        }\n        \n        return output;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"longest-continuous-subarray-with-absolute-diff-less-than-or-equal-to-limit"}