{"id":277109879,"lang":"cpp","time":"1 year, 10 months","timestamp":1573239812,"status_display":"Accepted","runtime":"252 ms","url":"/submissions/detail/277109879/","is_pending":"Not Pending","title":"3Sum","memory":"15.3 MB","code":"class Solution {\npublic:\n    vector<vector<int>> threeSum(const vector<int>& nums) {\n        vector<vector<int>> output;\n        size_t sz = nums.size(), k = 0;\n        if(sz < 3) return {};\n        \n        //Remove elements that occur multiple times.\n        unordered_map<int, int> temp;\n        for(int i : nums) ++temp[i];\n        vector<int> new_nums(temp.size());\n        for(const auto& t : temp) {\n            new_nums[k++] = t.first;\n            if(t.second > 1) {\n                if(find(nums.begin(), nums.end(), -t.first * 2) != nums.end()) {\n                    if(t.first == 0 && t.second < 3) continue;\n                    output.push_back({t.first, t.first, -t.first * 2});\n                } \n            }\n        }\n        \n        sort(new_nums.begin(), new_nums.end());\n        \n        for(auto a = new_nums.begin(); a != new_nums.end(); ++a) {\n            for(auto b = a + 1; b != new_nums.end(); ++b) {\n                int sum2 = *a + *b;\n                \n                if(sum2 > 0) break;\n                \n                if(binary_search(b + 1, new_nums.end(), -sum2))\n                    output.push_back({*a, *b, -sum2});\n            }\n        }\n        \n        return output;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"3sum"}