{"id":435932024,"lang":"cpp","time":"8 months, 3 weeks","timestamp":1609234940,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/435932024/","is_pending":"Not Pending","title":"Balanced Binary Tree","memory":"23 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    pair<bool, int> getBalance(TreeNode* root) {\n        if(!root) return make_pair(true, 0);\n        \n        auto l = getBalance(root->left);\n        if(!l.first) return {false, 0};\n        auto r = getBalance(root->right);\n        if(!r.first) return {false, 0};\n        if(abs(l.second - r.second) > 1) return {false, 0};\n        int height = max(l.second, r.second) + 1;\n        return {true, height};\n    }\n    \n    bool isBalanced(TreeNode* root) {\n        return getBalance(root).first;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"balanced-binary-tree"}