{"id":285919675,"lang":"cpp","time":"1 year, 9 months","timestamp":1576345142,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/285919675/","is_pending":"Not Pending","title":"Fraction Addition and Subtraction","memory":"N/A","code":"pair<int, int> addition(int num1, int den1, int num2, int den2) {\n    int64_t num = num1 * den2 + num2 * den1;\n    uint64_t den = den1 * den2;\n    uint64_t gcd_tmp = gcd(abs(num), den);\n    \n    return make_pair<int, int>(num / gcd_tmp, den / gcd_tmp);\n}\n\nuint64_t gcd(uint64_t a, uint64_t b) {\n    return b == 0 ? gcd(b, a % b) : a;\n}\n\nclass Solution {\npublic:\n    string fractionAddition(const string& expression) {\n        int numerator = 0;\n        int denominator = 0;\n        bool sign = true;\n        bool part = true;\n        int currentNumerator = 0;\n        int currentDenominator = 0;\n        for(char ch : expression) {\n            if(ch >= '0' && ch <= '9') {\n                if(part) {\n                    numerator = numerator * 10 + ch - '0';\n                } else {\n                    denominator = denominator * 10 + ch - '0';\n                }\n            } else if(ch == '/') {\n                part = false;\n            } else {\n                if(currentNumerator == 0) {\n                    currentNumerator = sign ? numerator : -numerator;\n                    currentDenominator = denominator;\n                } else if(numerator != 0) {\n                    auto p = addition(sign ? numerator : -numerator, denominator,\n                        currentNumerator, currentDenominator);\n                    currentNumerator = p.first;\n                    currentDenominator = p.second;\n                }\n\n                numerator = 0;\n                denominator = 0;\n                part = true;\n                sign = (ch == '+');\n            }\n        }\n        \n        if(currentNumerator == 0) {\n            currentNumerator = sign ? numerator : -numerator;\n            currentDenominator = denominator;\n        } else if(numerator != 0) {\n            auto p = addition(sign ? numerator : -numerator, denominator,\n                currentNumerator, currentDenominator);\n            currentNumerator = p.first;\n            currentDenominator = p.second;\n        }\n        \n        return to_string(currentNumerator).append(\"/\").append(to_string(currentDenominator));\n    }\n};","compare_result":"111111111111111111111011111000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"fraction-addition-and-subtraction"}