{"id":258666360,"lang":"cpp","time":"2Â years","timestamp":1567885888,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/258666360/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"15.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>> output;\n        \n        if(root) lvlOrder(&output, root, 0);\n        \n        return move(output);\n    }\n    \n    void lvlOrder(vector<vector<int>>* result, TreeNode* root, int level) {\n        if(result->size() < (level + 1)) {\n            result->push_back({root->val});\n        } else {\n            (*result)[level].push_back(root->val);\n        }\n        \n        if(root->left) lvlOrder(result, root->left, level + 1);\n        if(root->right) lvlOrder(result, root->right, level + 1);\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}