{"id":538848259,"lang":"cpp","time":"1Â month","timestamp":1629027155,"status_display":"Accepted","runtime":"224 ms","url":"/submissions/detail/538848259/","is_pending":"Not Pending","title":"Minimum Window Substring","memory":"7.9 MB","code":"class Solution {\npublic:\n    string minWindow(string s, string t) {\n        vector<int> cc(256);\n        for(char ch : t) ++cc[ch];    \n\n        auto check = [&]() -> bool {\n            for(int i = 0; i < 256; ++i) \n                if(cc[i] > 0) return false;\n            \n            return true;\n        };\n        \n        auto getCount = [&]() -> int {\n            int out = t.size();\n            for(int i : cc) out -= i;\n            \n            return out;\n        };\n\n        int count = numeric_limits<int>::max();\n        int start = 0;\n        int end = 0;\n        \n        for(int i = 0; i < s.size(); ++i) {\n            while(end < s.size() && !check()) {\n                --cc[s[end++]];\n            }\n            if(!check()) break;\n            int c = getCount();\n            if(count > c) {\n                count = c;\n                start = i;\n            }\n            ++cc[s[i]];\n        }\n        \n        if(count == numeric_limits<int>::max()) return \"\";\n        \n        return s.substr(start, count);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-window-substring"}