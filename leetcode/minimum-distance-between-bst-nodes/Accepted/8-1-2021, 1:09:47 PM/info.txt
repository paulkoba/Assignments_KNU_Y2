{"id":531525139,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1627812587,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/531525139/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"9.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    void inorder(TreeNode* root, vector<int>& output) {\n        if(!root) return;\n        inorder(root->left, output);\n        output.push_back(root->val);\n        inorder(root->right, output);\n    }\n    \n    int minDiffInBST(TreeNode* root) {\n        vector<int> output;\n        inorder(root, output);\n        int minDiff = numeric_limits<int>::max();\n        for(int i = 1; i < output.size(); ++i) {\n            minDiff = min(minDiff, output[i] - output[i - 1]);\n        }\n        return minDiff;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"minimum-distance-between-bst-nodes"}