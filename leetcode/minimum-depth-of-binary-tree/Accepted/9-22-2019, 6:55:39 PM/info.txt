{"id":263193403,"lang":"cpp","time":"1 year, 12 months","timestamp":1569167739,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/263193403/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"30.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    int minDepth(TreeNode* root) {\n        if(!root) return 0;\n        if(!root->left) return minDepth(root->right) + 1;\n        if(!root->right) return fastMinDepth(root->left) + 1;\n        return min(fastMinDepth(root->left), fastMinDepth(root->right)) + 1;\n    }\n    \n    int fastMinDepth(TreeNode* root) {\n        if(!root->left) return minDepth(root->right) + 1;\n        if(!root->right) return fastMinDepth(root->left) + 1;\n        return min(fastMinDepth(root->left), fastMinDepth(root->right)) + 1;\n    }\n};","compare_result":"11111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree"}