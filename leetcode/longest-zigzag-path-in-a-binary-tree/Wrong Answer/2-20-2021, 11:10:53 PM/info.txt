{"id":458507076,"lang":"cpp","time":"7Â months","timestamp":1613855453,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/458507076/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    int longestZigZag(TreeNode* root, bool isLeft) {\n        if(!root) return 0;\n        \n        if(isLeft) {\n            return max(longestZigZag(root->right) + 1, longestZigZag(root->left));\n        } else {\n            return max(longestZigZag(root->right), longestZigZag(root->left) + 1);\n        }\n    }\n    \npublic:\n    int longestZigZag(TreeNode* root) {\n        if(!root) return 0;\n        return max(longestZigZag(root->left, true), longestZigZag(root->right, true));\n    }\n};","compare_result":"1011100010110001000000010000000000010000000000000000000000","title_slug":"longest-zigzag-path-in-a-binary-tree"}