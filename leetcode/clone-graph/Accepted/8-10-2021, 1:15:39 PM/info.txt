{"id":536230393,"lang":"cpp","time":"1 month, 1 week","timestamp":1628590539,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/536230393/","is_pending":"Not Pending","title":"Clone Graph","memory":"8.8 MB","code":"/*\n// Definition for a Node.\nclass Node {\npublic:\n    int val;\n    vector<Node*> neighbors;\n    Node() {\n        val = 0;\n        neighbors = vector<Node*>();\n    }\n    Node(int _val) {\n        val = _val;\n        neighbors = vector<Node*>();\n    }\n    Node(int _val, vector<Node*> _neighbors) {\n        val = _val;\n        neighbors = _neighbors;\n    }\n};\n*/\n\nclass Solution {\npublic:\n    unordered_map<Node*, Node*> copied;\n    Node* cloneGraph(Node* node) {\n        if(!node) return nullptr;\n        if(copied.find(node) != copied.end()) return copied[node];\n        \n        Node* output = new Node(node->val);\n        copied[node] = output;\n        \n        for(Node* ptr : node->neighbors) {\n            output->neighbors.push_back(cloneGraph(ptr));\n        }\n        \n        return output;\n    }\n};","compare_result":"1111111111111111111111","title_slug":"clone-graph"}