{"id":458731490,"lang":"cpp","time":"7Â months","timestamp":1613893496,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/458731490/","is_pending":"Not Pending","title":"Second Minimum Node In a Binary Tree","memory":"7.1 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    void dfs(set<int>& a, TreeNode* root) {\n        if(!root) return;\n        a.insert(root->val);\n        dfs(a, root->left);\n        dfs(a, root->right);\n    }\npublic:\n    int findSecondMinimumValue(TreeNode* root) {\n        set<int> a;\n        dfs(a, root);\n        if(a.size() < 2) return -1;\n        return *(++a.begin());\n    }\n};","compare_result":"11111111111111111111111111111111111111","title_slug":"second-minimum-node-in-a-binary-tree"}