{"id":288074042,"lang":"cpp","time":"1 year, 9 months","timestamp":1577138438,"status_display":"Accepted","runtime":"124 ms","url":"/submissions/detail/288074042/","is_pending":"Not Pending","title":"Ones and Zeroes","memory":"10.1 MB","code":"class Solution {\npublic:\n    int findMaxForm(vector<string>& strs, int m, int n) {\n        size_t sz = strs.size();\n        vector<pair<int, int>> data(sz);\n        for(size_t i = 0; i < sz; ++i)\n            for(char ch : strs[i])\n                ch == '0' ? ++data[i].second : ++data[i].first;\n        \n        sort(data.begin(), data.end());\n        vector<vector<int>> dp(n + 1, vector<int>(m + 1));\n        \n        for(int i = 0; i < sz; ++i) {\n            for(int j = n; j >= 0; --j) {\n                if(data[i].first > j) continue;\n                for(int k = m; k >= 0; --k) {\n                    if(data[i].second > k) continue;\n                    dp[j][k] = max(dp[j][k], dp[j - data[i].first][k - data[i].second] + 1);\n                }\n            }\n        }\n        \n        return dp[n][m];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"ones-and-zeroes"}