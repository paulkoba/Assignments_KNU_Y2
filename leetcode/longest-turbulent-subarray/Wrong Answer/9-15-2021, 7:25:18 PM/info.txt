{"id":555428575,"lang":"cpp","time":"5Â days","timestamp":1631723118,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/555428575/","is_pending":"Not Pending","title":"Longest Turbulent Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maxTurbulenceSize(vector<int>& arr) {\n        if(arr.size() == 1) return 1;\n        if(arr.size() == 2) return arr[0] == arr[1] ? 1 : 2;\n        \n        int currentCount = 2;\n        int maxCount = 2;\n        \n        for(int i = 2; i < arr.size(); ++i) {\n            if((arr[i] > arr[i - 1] ) ^ (arr[i - 1] > arr[i - 2])) {\n                ++currentCount;\n            } else {\n                currentCount = 2;\n            }\n            if(arr[i] == arr[i - 1]) currentCount = 1;\n            maxCount = max(currentCount, maxCount);\n        }\n        \n        return maxCount;\n    }\n};","compare_result":"11111111111110111111111111111110111111111111111111111111111111111111111111111111111111111","title_slug":"longest-turbulent-subarray"}