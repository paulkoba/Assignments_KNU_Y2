{"id":534319158,"lang":"cpp","time":"1 month, 2 weeks","timestamp":1628269832,"status_display":"Accepted","runtime":"24 ms","url":"/submissions/detail/534319158/","is_pending":"Not Pending","title":"Where Will the Ball Fall","memory":"13 MB","code":"class Solution {\npublic:\n    vector<int> findBall(vector<vector<int>>& grid) {\n        vector<int> output;\n        for(int j = 0; j < grid[0].size(); ++j) {\n            int currentLocation = j;\n            bool stuck = false;\n            for(int i = 0; i < grid.size(); ++i) {\n                if(grid[i][currentLocation] == -1 && !currentLocation) {\n                    stuck = true;\n                    break;\n                }\n                \n                if(grid[i][currentLocation] == 1 && currentLocation == grid[0].size() - 1) {\n                    stuck = true;\n                    break;\n                }\n                \n                if(grid[i][currentLocation] == 1 && grid[i][currentLocation + 1] == -1) {\n                    stuck = true;\n                    break;\n                }\n                \n                if(grid[i][currentLocation] == -1 && grid[i][currentLocation - 1] == 1) {\n                    stuck = true;\n                    break;\n                }\n                \n                if(grid[i][currentLocation] == 1) {\n                    ++currentLocation;\n                } else {\n                    --currentLocation;\n                }\n            }\n            \n            if(!stuck) {\n                output.push_back(currentLocation);\n            } else {\n                output.push_back(-1);\n            }\n        }\n        \n        return output;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"where-will-the-ball-fall"}