{"id":267694961,"lang":"cpp","time":"1 year, 11 months","timestamp":1570449372,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/267694961/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        int size = lists.size();\n        ListNode* last = new ListNode(0);\n        ListNode* head = last;\n        for(int i = 0; i < size; ++i) {\n            if(!lists[i]) {\n                lists.erase(lists.begin() + i);\n                size--;\n            }\n        }\n        \n        while(size != 0) {\n            int min = 0;\n            for(int i = 0; i < size; ++i) {\n                    if(lists[i]->val < lists[min]->val) {\n                        min = i;\n                    }\n            }\n            \n            ListNode* newLast = new ListNode(lists[min]->val);\n            last->next = newLast;\n            last = newLast;\n            \n            lists[min] = lists[min]->next;\n            if(!lists[min]) {\n                lists.erase(lists.begin() + min);\n                --size;\n            }\n        }\n        \n        return head->next;\n    }\n};","compare_result":"11111000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"merge-k-sorted-lists"}