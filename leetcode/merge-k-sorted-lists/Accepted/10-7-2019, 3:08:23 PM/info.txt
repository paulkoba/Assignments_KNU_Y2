{"id":267696235,"lang":"cpp","time":"1 year, 11 months","timestamp":1570450103,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/267696235/","is_pending":"Not Pending","title":"Merge k Sorted Lists","memory":"11.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeKLists(vector<ListNode*>& lists) {\n        int size = lists.size();\n        int ptr = 0;\n        if(size == 0) return nullptr;\n        while((size - ptr) >= 2) {\n            lists.push_back(mergeTwoLists(lists[ptr], lists[ptr + 1]));\n            ++size;\n            ptr += 2;\n        }\n        \n        return lists[size - 1];\n    }\n    \n    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\n        if(!l1) return l2;\n        if(!l2) return l1;\n        if(l1->val <= l2->val) {\n            l1->next = mergeTwoLists(l1->next, l2);\n            return l1;\n        } else {\n            l2->next = mergeTwoLists(l2->next, l1);\n            return l2;\n        }\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-k-sorted-lists"}