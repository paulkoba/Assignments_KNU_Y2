{"id":309851542,"lang":"cpp","time":"1 year, 6 months","timestamp":1583488661,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/309851542/","is_pending":"Not Pending","title":"Flood Fill","memory":"9.2 MB","code":"struct fillData {\n    vector<vector<int>>& image;\n    int newColor;\n    int oldColor;\n};\n\nvoid fillNearby(int sr, int sc, fillData& data) {\n    if(data.image[sr][sc] == data.newColor) return;\n    \n    data.image[sr][sc] = data.newColor;\n    \n    if(sr > 0 && data.image[sr - 1][sc] == data.oldColor) fillNearby(sr - 1, sc, data);\n    if(sr < (data.image.size() - 1) && data.image[sr + 1][sc] == data.oldColor) fillNearby(sr + 1, sc, data);\n    if(sc > 0 && data.image[sr][sc - 1] == data.oldColor) fillNearby(sr, sc - 1, data);\n    if(sc < (data.image[0].size() - 1) && data.image[sr][sc + 1] == data.oldColor) fillNearby(sr, sc + 1, data);\n}\n\nclass Solution {\npublic:\n    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int newColor) {\n        fillData data{image, newColor, image[sr][sc]};\n        fillNearby(sr, sc, data);\n        return image;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill"}